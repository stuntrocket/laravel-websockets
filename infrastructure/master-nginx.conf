map $http_upgrade $type {
    default "web";
    websocket "ws";
}
server {
    listen 80;
    listen [::]:80;
    root /var/www/vhosts/echo.stuntrocket.co/current/public;
    index index.php index.html index.htm index.nginx-debian.html;
    charset utf-8;

    access_log    /var/log/nginx/echo.stuntrocket.co/proxy-access.log main;
    error_log     /var/log/nginx/echo.stuntrocket.co/proxy-error.log error;

    server_name echo.stuntrocket.co;

    location ~ \.php$ {
        try_files $uri /index.php =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location / {
        try_files /nonexistent @$type;
    }

    location @web {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location @ws {
        proxy_pass             http://127.0.0.1:6001;
        proxy_set_header Host  $host;
        proxy_read_timeout     60;
        proxy_connect_timeout  60;
        proxy_redirect         off;

        # Allow the use of websockets
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    listen 443 ssl; # managed by Certbot

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    add_header Strict-Transport-Security "max-age=31536000" always; # managed by Certbot

    ssl_certificate /etc/letsencrypt/live/echo.stuntrocket.co/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/echo.stuntrocket.co/privkey.pem; # managed by Certbot

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    } # managed by Certbot
}
